// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb" // or mysql/sqlite
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid()) @map("_id")
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  password       String?  // Already present

  resetToken      String?
  tokenExpiresAt  DateTime?

  accounts       Account[]
  sessions       Session[]
  otps           OTP[]
}
model Account {
  id                String   @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id           String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
model OTP {
  id         String   @id @default(cuid()) @map("_id")
  email      String
  otp        String
  expiresAt  DateTime
  used       Boolean  @default(false)
  createdAt  DateTime @default(now())
  userId      String
  failedAttempts Int    @default(0)

  user        User    @relation(fields: [userId], references: [id])
}
